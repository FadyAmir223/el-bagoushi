services:
  app-prod:
    image: fadyamir/app-prod
    container_name: app-prod # compose
    build:
      context: .
      dockerfile: ./apps/web/Dockerfile
      network: host
      secrets:
        - SECRET_ENVS
    ports:
      - 3000:3000
    volumes:
      - ./apps/web/uploads:/app/apps/web/uploads
    env_file:
      - ./envs/production/.env.production.docker
      - ./envs/production/.env.production.docker.local
    networks:
      - internal-prod
    depends_on:
      - db-prod
    deploy:
      mode: replicated
      replicas: 1
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
        max_attempts: 3
        window: 80s

  db-prod:
    image: postgres:16.4-alpine
    container_name: db-prod # compose
    ports:
      - 5432:5432
    user: '${MY_UID}:${MY_GID}'
    volumes:
      - db-prod-data:/var/lib/postgresql/data
    environment:
      - PGDATA=/var/lib/postgresql/data/data-prod
      - POSTGRES_USER_FILE=/run/secrets/postgres_user
      - POSTGRES_PASSWORD_FILE=/run/secrets/postgres_password
      - POSTGRES_DB_FILE=/run/secrets/postgres_db
    secrets:
      - postgres_user
      - postgres_password
      - postgres_db
    networks:
      - internal-prod
    deploy:
      restart_policy:
        condition: on-failure

volumes:
  db-prod-data:

networks:
  internal-prod:
    external: false

secrets:
  SECRET_ENVS:
    file: .env.production.build.local
  postgres_user:
    file: secrets/production/postgres-user.txt
  postgres_password:
    file: secrets/production/postgres-password.txt
  postgres_db:
    file: secrets/production/postgres-db.txt
